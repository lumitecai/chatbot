version: '3.8'

services:
  # Development service
  chatbot-dev:
    build:
      context: .
      target: development
    container_name: chatbot-demo-dev
    ports:
      - "3000:3000"
    volumes:
      - .:/app
    environment:
      - NODE_ENV=development
      - REACT_APP_N8N_WEBHOOK_URL=${REACT_APP_N8N_WEBHOOK_URL}
      - REACT_APP_API_BASE_URL=${REACT_APP_API_BASE_URL}
    stdin_open: true
    tty: true
    command: npm start

  # Test service
  chatbot-test:
    build:
      context: .
      target: test
    container_name: chatbot-demo-test
    volumes:
      - .:/app
    environment:
      - NODE_ENV=test
      - CI=true
    command: npm test -- --watchAll=false --coverage

  # Build service
  chatbot-build:
    build:
      context: .
      target: build
    container_name: chatbot-demo-build
    volumes:
      - ./build:/app/build
    environment:
      - NODE_ENV=production
      - REACT_APP_N8N_WEBHOOK_URL=${REACT_APP_N8N_WEBHOOK_URL}
      - REACT_APP_API_BASE_URL=${REACT_APP_API_BASE_URL}

  # Production preview service
  chatbot-prod:
    build:
      context: .
      target: production
    container_name: chatbot-demo-prod
    ports:
      - "8080:80"
    environment:
      - NODE_ENV=production

  # WebSocket server for workflow status updates
  websocket-server:
    build:
      context: ./server
    container_name: chatbot-websocket-server
    ports:
      - "3001:3001"
    environment:
      - WS_PORT=3001
      - NODE_ENV=production
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3001/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1); })"]
      interval: 30s
      timeout: 3s
      retries: 3